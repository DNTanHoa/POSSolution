// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POSSolution.Application.Context;

namespace POSSolution.Application.Migrations
{
    [DbContext(typeof(POSContext))]
    [Migration("20200225153556_EditMenuAndItem")]
    partial class EditMenuAndItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("POSSolution.Application.Models.Item", b =>
                {
                    b.Property<int>("itemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("itemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("itemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("POSSolution.Application.Models.Menu", b =>
                {
                    b.Property<int>("menuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("menuId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("POSSolution.Application.Models.MenuItem", b =>
                {
                    b.Property<int>("menuId")
                        .HasColumnType("int");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.HasKey("menuId", "itemId");

                    b.HasIndex("itemId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("POSSolution.Application.Models.Region", b =>
                {
                    b.Property<Guid>("regionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("shopId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("regionId");

                    b.HasIndex("shopId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("POSSolution.Application.Models.Shop", b =>
                {
                    b.Property<Guid>("shopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("shopId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("POSSolution.Application.Models.ShopStatus", b =>
                {
                    b.Property<Guid>("statusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("statusId");

                    b.ToTable("ShopStatuses");
                });

            modelBuilder.Entity("POSSolution.Application.Models.Table", b =>
                {
                    b.Property<int>("tableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("currentPeople")
                        .HasColumnType("int");

                    b.Property<Guid?>("regionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tableCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("tableId");

                    b.HasIndex("regionId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("POSSolution.Application.Models.TableStatus", b =>
                {
                    b.Property<int>("statusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("regionsregionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("statusId");

                    b.HasIndex("regionsregionId");

                    b.ToTable("TableStatuses");
                });

            modelBuilder.Entity("POSSolution.Application.Models.MenuItem", b =>
                {
                    b.HasOne("POSSolution.Application.Models.Item", "itemNavigation")
                        .WithMany("menus")
                        .HasForeignKey("itemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POSSolution.Application.Models.Menu", "menuNavigation")
                        .WithMany("items")
                        .HasForeignKey("menuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("POSSolution.Application.Models.Region", b =>
                {
                    b.HasOne("POSSolution.Application.Models.Shop", "shop")
                        .WithMany("regions")
                        .HasForeignKey("shopId");
                });

            modelBuilder.Entity("POSSolution.Application.Models.Table", b =>
                {
                    b.HasOne("POSSolution.Application.Models.Region", "region")
                        .WithMany("tables")
                        .HasForeignKey("regionId");
                });

            modelBuilder.Entity("POSSolution.Application.Models.TableStatus", b =>
                {
                    b.HasOne("POSSolution.Application.Models.Region", "regions")
                        .WithMany()
                        .HasForeignKey("regionsregionId");
                });
#pragma warning restore 612, 618
        }
    }
}
